{"ast":null,"code":"var _jsxFileName = \"/home/beethoven/Documents/JoshLinux2/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component.jsx\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/beethoven/Documents/JoshLinux2/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","email","password","state","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AAEA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,mBAAvC,QAAkE,kBAAlE;;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASHC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,KAAK,CAACG,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACD,KAbkB;;AAAA,SAenBI,YAfmB,GAeJ,MAAOL,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAEf,QAAAA;AAAF,UAAuB,KAAKO,KAAlC;AACA,YAAM;AAAES,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AAEAlB,MAAAA,gBAAgB,CAACgB,KAAD,EAAQC,QAAR,CAAhB;AACD,KArBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAgBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAwB,KAAKQ,KAAnC;AACA,wBACE,QAAC,eAAD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAM,QAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,OAAhB;AAAwB,UAAA,IAAI,EAAC,OAA7B;AAAqC,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWF,KAAvD;AAA8D,UAAA,YAAY,EAAE,KAAKR,YAAjF;AAA+F,UAAA,KAAK,EAAC,OAArG;AAA6G,UAAA,QAAQ;AAArH;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,UAAhB;AAA2B,UAAA,IAAI,EAAC,UAAhC;AAA2C,UAAA,KAAK,EAAE,KAAKU,KAAL,CAAWD,QAA7D;AAAuE,UAAA,YAAY,EAAE,KAAKT,YAA1F;AAAwG,UAAA,KAAK,EAAC,UAA9G;AAAyH,UAAA,QAAQ;AAAjI;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAC,SAA/B;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAET,iBAArC;AAAwD,YAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA3CkC;;AA8CrC,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,iBAAiB,EAAE,MAAMsB,QAAQ,CAACtB,iBAAiB,EAAlB,CADO;AAExCC,EAAAA,gBAAgB,EAAE,CAACgB,KAAD,EAAQC,QAAR,KAAqBI,QAAQ,CAACrB,gBAAgB,CAAC;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFP,CAAf,CAA3B;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport FormInput from \"../form-input/form-input.component.jsx\"\nimport CustomButton from \"../custom-button/custom-button.component\"\n\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\"\n\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\"\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n    }\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target\n\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n    const { emailSignInStart } = this.props\n    const { email, password } = this.state\n\n    emailSignInStart(email, password)\n  }\n\n  render() {\n    const { googleSignInStart } = this.props\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput name=\"email\" type=\"email\" value={this.state.email} handleChange={this.handleChange} label=\"email\" required />\n          <FormInput name=\"password\" type=\"password\" value={this.state.password} handleChange={this.handleChange} label=\"password\" required />\n          <ButtonsBarContainer className=\"buttons\">\n            <CustomButton type=\"submit\">Sign in</CustomButton>\n            <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)\n"]},"metadata":{},"sourceType":"module"}